{"version":3,"sources":["../../autopilot/presets.js","serviceWorker.js","../../network/networkBus/MessageEvents.ts","services/communicationService.js","pages/CompassPage.tsx","components/SidebarMenu.js","pages/HomePage.js","stores/LogStore.js","pages/LogPage.js","components/Component.js","stores/AutopilotClientStore.js","pages/AutopilotPage/PresetsSelect.js","pages/AutopilotPage/Label.js","pages/AutopilotPage/Value.js","pages/AutopilotPage/ValueField.js","pages/AutopilotPage/Color.js","pages/AutopilotPage/ValuesBox.js","pages/AutopilotPage/AdjustableValuesBox.js","pages/AutopilotPage/ExtraBox.js","pages/AutopilotPage/AutopilotPage.js","pages/SystemsPage/ToggleSwitch.js","pages/SystemsPage/SystemsPage.js","components/DesktopApp.js","pages/mobile/MobileAutopilotPage.js","components/MobileApp.js","index.js","components/App.js"],"names":["module","exports","text","values","rudderTime","rudderWait","kP","kI","kD","Boolean","window","location","hostname","match","MessageEvents","ws","WebSocket","listeners","onmessage","msg","messageObj","JSON","parse","data","event","forEach","listener","onopen","send","stringify","cmd","sendMessage","onBusMessage","push","CompassPage","useState","compassState","setCompassState","useEffect","i","setInterval","clearInterval","pull","Table","style","width","label","magCal","accCal","gyroCal","cmpCal","Button","onClick","isCal","Value","children","SidebarMenu","ListGroup","ListGroupItem","to","HomePage","log","observable","array","clearLogMessages","clear","bind","console","LogPage","observer","map","idx","key","level","Component","React","merge","sendToAutopilot","presets","require","_","PresetsSelect","preset","Maybe","of","get","DropdownButton","id","onSelect","updatePresets","title","v","k","Dropdown","Item","eventKey","getOrElse","Label","Col","xs","ValueField","Row","undefined","toString","Color","isNumber","colorIt","num","value","toFixed","color","n","places","parseFloat","ValuesBox","isNil","eventToString","ctrl","alt","shift","joinWith","adjustableValues","inc","AdjustableValuesBox","props","state","adjustableValueIdx","keyUpListener","onKeyUp","document","addEventListener","removeEventListener","this","ev","downArrow","upArrow","shiftLeft","shiftRight","setState","length","Object","keys","item","highlighted","backgroundColor","ExtraBox","set","maxDly","maxMaxDly","minHz","Math","max","isNaN","min","AutopilotPage","keyListener","shiftKey","code","Either","cata","course","Container","fluid","paddingBottom","Alert","ToggleSwitch","system","withPasscode","isOn","setOn","setTimeout","variant","active","SystemsPage","DesktopApp","orientation","flex","path","component","MobileAutopilotPage","fontSize","paddingLeft","paddingTop","toggleAutopilot","move","marginLeft","direction","MobileApp","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.613b25a5.chunk.js","sourcesContent":["module.exports = {\n    \"motor-light\": {\n        text: 'Motor - light conditions',\n        values: {\n            rudderTime: 200,\n            rudderWait: 200,\n            kP: 15,\n            kI: 1,\n            kD: 1,\n        }\n    },\n    'sail-light': {\n        text: 'Sailing - light conditions',\n        values: {\n            rudderTime: 200,\n            rudderWait: 200,\n            kP: 60,\n            kI: 6,\n            kD: 2,\n        }\n    },\n    'sail-light-med-downhill': {\n        text: 'Sailing - light/med downhill',\n        values: {\n            rudderTime: 200,\n            rudderWait: 200,\n            kP: 100,\n            kI: 4,\n            kD: 2,\n        }\n    },\n    'sail-med-heavy-downhill': {\n        text: 'Sailing - med/heavy downhill',\n        values: {\n            rudderTime: 200,\n            rudderWait: 400,\n            kP: 300,\n            kI: 4,\n            kD: 3,\n        }\n    }\n};\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const MessageEvents = {\n    COMPASS_STATE: 'CMP-STATE',\n    GET_COMPASS_STATE: 'GET-CMP-STATE',\n    CALIBRATE_COMPASS: 'CMP-CAL'\n}","import {MessageEvents} from \"./MessageEvents\";\nimport {pull} from 'lodash'\n\nconst ws = new WebSocket(`ws://${window.location.hostname}:3001/ws`);\n\nconst listeners = {};\n\nws.onmessage = (msg) => {\n    const messageObj = JSON.parse(msg.data);\n    listeners[messageObj.event].forEach((listener) => listener(messageObj.data))\n};\n\nws.onopen = () => {\n    ws.send(JSON.stringify({cmd: 'register', data: {event: 'AUTOPILOT'}}));\n    ws.send(JSON.stringify({cmd: 'register', data: {event: 'LOG'}}))\n    ws.send(JSON.stringify({cmd: 'register', data: {event: MessageEvents.COMPASS_STATE}}))\n}\n\n\nexport const sendMessage = (event, data = {}) => ws.send(JSON.stringify({cmd: 'send', data: {event, ...data}}));\nexport const onBusMessage = (event, listener) => {\n    listeners[event] = listeners[event] || [];\n    listeners[event].push(listener);\n};\n\nexport const offBusMessage = (event, listener) => pull(listeners[event], listener)\n\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Table} from \"react-bootstrap\";\nimport {offBusMessage, onBusMessage, sendMessage} from \"../services/communicationService\";\nimport {MessageEvents} from \"../services/MessageEvents\";\n\nexport const CompassPage = () => {\n    const [compassState, setCompassState] = useState({} as any)\n\n    const calibrateCompass = (): void => sendMessage(MessageEvents.CALIBRATE_COMPASS);\n\n\n    useEffect(() => {\n        onBusMessage(MessageEvents.COMPASS_STATE, setCompassState);\n        const i = setInterval(() => sendMessage(MessageEvents.GET_COMPASS_STATE), 2000);\n        return () => {\n            clearInterval(i);\n            offBusMessage(MessageEvents.COMPASS_STATE, setCompassState)\n        };\n    })\n    return (\n        <>\n            <Table style={{width: 0}}>\n                <tbody>\n                <Value label=\"Magnetometer Cal\">{compassState.magCal}</Value>\n                <Value label=\"Accelerometer Cal\">{compassState.accCal}</Value>\n                <Value label=\"Gyro Cal\">{compassState.gyroCal}</Value>\n                <Value label=\"Compass Cal\">{compassState.cmpCal}</Value>\n                </tbody>\n            </Table>\n            <Button onClick={calibrateCompass}>{compassState.isCal ? 'Calibrating...' : 'Calibrate'}</Button>\n        </>\n    )\n};\n\nconst Value = ({label, children}: { label: string, children: string | number }) => (\n    <tr>\n        <td>\n            {label}:\n        </td>\n        <td>\n            {children}\n        </td>\n    </tr>\n)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {ListGroup, ListGroupItem} from 'react-bootstrap'\n\nexport const SidebarMenu = () => (\n    <ListGroup>\n        <ListGroupItem>\n            <Link to=\"/log\">Log</Link>\n        </ListGroupItem>\n        <ListGroupItem>\n            <Link to=\"/autopilot\">Autopilot</Link>\n        </ListGroupItem>\n        <ListGroupItem>\n            <Link to=\"/compass\">Compass</Link>\n        </ListGroupItem>\n        <ListGroupItem>\n            <Link to=\"/systems\">Systems</Link>\n        </ListGroupItem>\n    </ListGroup>\n);","import React from 'react'\nexport const HomePage = () => (\n    <div>\n        This is home\n    </div>\n);","import {observable} from 'mobx'\nimport {onBusMessage} from \"../services/communicationService\";\n\n\nexport const log = observable.array([]);\n\nexport const getLogMessages = () => log;\nexport const clearLogMessages = log.clear.bind(log);\n\n\nonBusMessage('LOG', (msg) => console.log(msg) || log.push(msg));\n","import React from 'react'\nimport {observer} from 'mobx-react'\nimport {getLogMessages, clearLogMessages} from \"../stores/LogStore\";\n\nexport const LogPage = observer(() => (\n    <div>\n        <button onClick={clearLogMessages}>Clear</button>\n        {\n            getLogMessages().map((msg, idx) => (\n                <div key={idx}>{msg.level}: {msg.msg}</div>\n            ))\n        }\n    </div>\n));\n","import React from 'react'\n\nexport const Component = React.Component;","import {observable} from 'mobx'\nimport {sendMessage, onBusMessage} from \"../services/communicationService\";\n\nonBusMessage('AUTOPILOT', messageObj => {\n    values.merge(messageObj);\n})\n\n\nexport const values = observable.map();\n\nexport const sendToAutopilot = data => sendMessage('AUTOPILOT', {data});\n\n\n\n\n\n","import React from 'react'\nimport {Component} from \"../../components/Component\";\nimport {observer} from 'mobx-react'\nimport {sendToAutopilot, values} from \"../../stores/AutopilotClientStore\";\nimport {Maybe} from 'simple-monads'\nimport {DropdownButton} from \"react-bootstrap\";\nimport {Dropdown} from 'react-bootstrap'\n\nconst presets = require('../../presets');\n\nconst _ = require('lodash');\n\nexport const PresetsSelect = observer(class extends Component {\n\n    updatePresets(preset) {\n        sendToAutopilot({preset: preset});\n    }\n\n    render() {\n        return Maybe.of(values.get('preset'))\n            .map(preset => (\n                <DropdownButton id=\"preset-select\" onSelect={this.updatePresets.bind(this)} title={_.get(presets[preset], 'text')}>\n                    {_.map(presets, (v, k) => <Dropdown.Item key={k} eventKey={k}>{v.text}</Dropdown.Item>)}\n                </DropdownButton>\n            ))\n            .getOrElse(null);\n    }\n});\n\n","import React from 'react'\nimport {Col} from 'react-bootstrap'\n\nexport const Label = ({children}) => (\n    <Col xs={4}><label>{children}:</label></Col>\n);","import React from 'react'\nimport {Col} from 'react-bootstrap'\n\nexport const Value = ({children}) => <Col xs={8}>{children}</Col>;\n","import React from 'react'\nimport {Label} from \"./Label\"\nimport {Value} from \"./Value\"\nimport {Row} from 'react-bootstrap'\n\nexport const ValueField =  ({label, children}) => (\n    <Row>\n        <Label>{label}</Label>\n        <Value>{children === undefined  ? 'undefined' : typeof children === 'object' ? children : children.toString()}</Value>\n    </Row>\n);\n\n","import React from 'react'\nimport {isNumber} from 'lodash'\n\nexport const Color = ({children}) => isNumber(children) ? colorIt(children) : 'N/A';\n\nconst colorIt = (num) => {\n    const value = toFixed(num, 3);\n    let color = 'black';\n    num > 0 && (color = 'green');\n    num < 0 && (color = 'red');\n\n    return <span style={{color: color}}>{value}</span>\n};\n\nconst toFixed =  (n, places) => parseFloat(parseFloat(n, 10).toFixed(places));\n","import React from 'react'\nimport {Component} from \"../../components/Component\";\nimport {observer} from 'mobx-react'\nimport {values} from \"../../stores/AutopilotClientStore\";\nimport {ValueField} from \"./ValueField\";\nimport {Color} from \"./Color\";\nimport {isNil} from 'lodash'\n\n\nexport const ValuesBox = observer(class extends Component {\n    render() {\n        return (\n            <div>\n                <ValueField label=\"Course\">{isNil(values.get('course')) ? '---': values.get('course') }</ValueField>\n                <ValueField label=\"Heading\">{values.get('heading')}</ValueField>\n\n                <ValueField label=\"Error\"><Color>{values.get('error')}</Color></ValueField>\n                <ValueField label=\"Rudder\"><Color>{values.get('course') === undefined ? 'N/A' : values.get('rudder')}</Color> </ValueField>\n            </div>\n        )\n    }\n});\n\n","import React from 'react'\nimport {sendToAutopilot, values} from \"../../stores/AutopilotClientStore\";\nimport {Component} from \"../../components/Component\";\nimport {observer} from 'mobx-react'\nimport {ValueField} from \"./ValueField\";\n\nconst eventToString = require('key-event-to-string')({\n    cmd: \"cmd\",\n    ctrl: \"ctrl\",\n    alt: \"alt\",\n    shift: \"shift\",\n    joinWith: \"-\"\n});\n\nconst adjustableValues = [\n    {key: 'rudderTime', text: 'RudderTime', inc: 10},\n    {key: 'rudderWait', text: 'Rudder Wait', inc: 10},\n    {key: 'kP', text: 'P', inc: 1},\n    {key: 'kI', text: 'I', inc: 1},\n    {key: 'kD', text: 'D', inc: 1},\n];\n\nexport const AdjustableValuesBox = observer(class AdjustableValuesBox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {adjustableValueIdx: 0};\n        this.keyUpListener = this.onKeyUp.bind(this);\n        document.addEventListener('keyup', this.keyUpListener);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keyup', this.keyUpListener);\n    }\n\n    onKeyUp(ev) {\n        const key = eventToString(ev);\n        key === 'Down' && this.downArrow();\n        key === 'Up' && this.upArrow();\n        key === 'shift-Left' && this.shiftLeft();\n        key === 'shift-Right' && this.shiftRight();\n    }\n\n    downArrow() {\n        this.setState({adjustableValueIdx: this.state.adjustableValueIdx < adjustableValues.length - 1 ? this.state.adjustableValueIdx + 1 : 0});\n    }\n\n    upArrow() {\n        this.setState({adjustableValueIdx: this.state.adjustableValueIdx === 0 ? Object.keys(adjustableValues).length - 1 : this.state.adjustableValueIdx - 1});\n    }\n\n    shiftLeft() {\n        const item = adjustableValues[this.state.adjustableValueIdx];\n        sendToAutopilot({[item.key]: values.get(item.key) - item.inc});\n    }\n\n    shiftRight() {\n        const item = adjustableValues[this.state.adjustableValueIdx];\n        sendToAutopilot({[item.key]: values.get(item.key) + item.inc});\n    }\n\n    render() {\n        return (\n            <div>\n                {adjustableValues.map((v, idx) => {\n                    return (\n                        <ValueField key={v.key} label={v.text}>\n                            <span key={v.key} style={idx === this.state.adjustableValueIdx ? style.highlighted : {}}>\n                                {values.get(v.key)}\n                            </span>\n                        </ValueField>\n                    )\n                })}\n            </div>\n        )\n    }\n})\n\nconst style = {\n    highlighted: {\n        backgroundColor: 'black',\n        color: 'white'\n    }\n};\n\n\n","import React from 'react'\nimport {Component} from \"../../components/Component\";\nimport {values} from \"../../stores/AutopilotClientStore\";\nimport {observer} from 'mobx-react'\nimport {ValueField} from \"./ValueField\";\nimport {Color} from \"./Color\";\n\n\nexport const ExtraBox = observer(class ExtraBox extends Component {\n\n    constructor(props) {\n        super(props);\n        values.get('voltage') || values.set('voltage', 1023);\n\n        this.maxDly = 0;\n        this.maxMaxDly = 0;\n        this.minHz = 999999;\n\n        setInterval(() => this.minHz = 999999, 5000);\n        setInterval(() => {\n            this.maxMaxDly = Math.max(this.maxMaxDly, this.maxDly);\n            this.maxDly = 0;\n        }, 1000 * 60 * 5);\n    }\n\n    render() {\n        this.maxDly = isNaN(this.maxDly) ? 0 : Math.max(values.get('compassDelay'), this.maxDly);\n        this.minHz = Math.min(values.get('hz'), this.minHz);\n        return (\n            <div>\n                <ValueField label=\"Roll\"><Color>{values.get('roll')}</Color></ValueField>\n                <ValueField label=\"Pitch\"><Color>{values.get('pitch')}</Color> </ValueField>\n                <ValueField label=\"HZ\">{values.get('hz')}</ValueField>\n                <ValueField label=\"Min HZ\">{this.minHz}</ValueField>\n                <ValueField label=\"R State\">{values.get('rudderState')}</ValueField>\n                <ValueField label=\"Base\">{values.get('prevBase')}</ValueField>\n                <ValueField label=\"Tach\">{values.get('prevTach')}</ValueField>\n                <ValueField label=\"Speed\">{values.get('prevSpeed')}</ValueField>\n                <ValueField label=\"Cmps Dly\">{values.get('compassDelay')}</ValueField>\n                <ValueField label=\"Max Dly\">{this.maxDly} ({this.maxMaxDly})</ValueField>\n            </div>\n        )\n    }\n});\n\n\n\n","import React from 'react'\nimport {Col, Row, Container, Alert} from 'react-bootstrap';\nimport {Component} from \"../../components/Component\";\nimport {Maybe, Either} from 'simple-monads'\nimport {values, sendToAutopilot} from \"../../stores/AutopilotClientStore\";\nimport {PresetsSelect} from './PresetsSelect'\nimport {ValuesBox} from \"./ValuesBox\";\nimport {AdjustableValuesBox} from \"./AdjustableValuesBox\";\nimport {ExtraBox} from \"./ExtraBox\";\n\nexport class AutopilotPage extends Component {\n\n    constructor(props) {\n        super(props);\n        document.addEventListener('keyup', this.keyListener);\n    }\n\n\nkeyListener(key) {\n        if(key.shiftKey === false) {\n            key.code === 'KeyC' &&\n            Either.of(values.get('course'))\n                .cata(\n                    () => sendToAutopilot({course: values.get('heading')}),\n                    () => sendToAutopilot({course: null})\n                );\n\n            key.code === 'ArrowRight' && (\n                Maybe.of(values.get('course'))\n                    .map(course => course === 359 ? 0 : course + 1)\n                    .map(course => {\n                        values.set('course', course);\n                        return course;\n                    })\n                    .map(course => sendToAutopilot({course}))\n            );\n\n            key.code === 'ArrowLeft' && (\n                Maybe.of(values.get('course'))\n                    .map(course => sendToAutopilot({course: course ? course - 1 : 359}))\n            );\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keyup', this.keyListener);\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col style={{paddingBottom: 5}}><PresetsSelect/></Col>\n                </Row>\n                <Row>\n                    <Col xs={6}>\n                        <Alert>\n                            <ValuesBox/>\n                            <AdjustableValuesBox/>\n                        </Alert>\n                    </Col>\n                    <Col xs={6}>\n                        <Alert>\n                            <ExtraBox/>\n                        </Alert>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n","import React, {useState, useEffect} from 'react'\nimport {Button} from \"react-bootstrap\";\n\nexport const ToggleSwitch = ({children, system, withPasscode}) => {\n    const [isOn, setOn] = useState(false);\n    useEffect(() => {\n        setTimeout(() => setOn(true), 5000);\n    });\n\n    const toggle = () => {\n\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={toggle} active={isOn}>{children}</Button>\n        </>\n    )\n};","import React from 'react'\nimport {ToggleSwitch} from \"./ToggleSwitch\";\n\nexport const SystemsPage = () => (\n    <>\n        <ToggleSwitch>\n            Pump out\n        </ToggleSwitch>\n    </>\n);","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport {ReflexContainer, ReflexElement, ReflexSplitter} from 'react-reflex'\n\nimport {CompassPage} from \"../pages/CompassPage\";\nimport {SidebarMenu} from \"./SidebarMenu\";\nimport {HomePage} from \"../pages/HomePage\";\nimport {LogPage} from \"../pages/LogPage\";\nimport {AutopilotPage} from \"../pages/AutopilotPage\";\nimport {SystemsPage} from \"../pages/SystemsPage\";\n\n\nexport const DesktopApp = () => (\n    <ReflexContainer orientation=\"vertical\">\n        <ReflexElement flex={.2}>\n            <SidebarMenu/>\n        </ReflexElement>\n        <ReflexSplitter/>\n        <ReflexElement>\n            <Switch>\n                <Route path=\"/log\" component={LogPage}/>\n                <Route path=\"/autopilot\" component={AutopilotPage}/>\n                <Route path=\"/compass\" component={CompassPage} />\n                <Route path=\"/systems\" component={SystemsPage} />\n                <Route component={HomePage}/>\n            </Switch>\n        </ReflexElement>\n    </ReflexContainer>\n);","import React from 'react'\nimport {values} from \"../../stores/AutopilotClientStore\";\nimport {observer} from \"mobx-react\";\nimport {sendMessage} from \"../../services/communicationService\";\n\nexport const MobileAutopilotPage = observer(() => {\n    return (\n        <div style={{fontSize: 30, paddingLeft: 50, paddingTop: 50}}>\n            <p>\n                <button onClick={toggleAutopilot}>\n                    {values.get('course') ? 'On' : 'Off'}\n                </button>\n                </p>\n            <p>Course: {values.get('course')}</p>\n            <p>Heading: {values.get('heading')}</p>\n            <p>Error: <span  style={{color: values.get('error') < 0 ? 'red': 'green'}}>{values.get('error')}</span></p>\n            <p>\n                <button onClick={() => move(-1)}>{'<--'}</button>\n                <button style={{marginLeft: 50}} onClick={() => move(1)}>{'-->'}</button>\n            </p>\n        </div>\n    )\n});\n\nconst move = direction => {\n    let course = values.get('course');\n    course += direction;\n    course > 359 && (course = 0);\n    course < 0 && (course = 359);\n    sendToAutopilot({course});\n    values.set('course', course);\n};\n\nconst toggleAutopilot = () => values.get('course') ?\n    sendToAutopilot({course: null}) :\n    sendToAutopilot({course: values.get('heading')});\n\nexport const sendToAutopilot = data => sendMessage('AUTOPILOT', {data});\n","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport {MobileAutopilotPage} from \"../pages/mobile/MobileAutopilotPage\";\n\nexport const MobileApp = () => (\n    <Switch>\n        <Route component={MobileAutopilotPage}/>\n    </Switch>\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {App} from \"./components/App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport 'react-reflex/styles.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {DesktopApp} from \"./DesktopApp\";\nimport {MobileApp} from \"./MobileApp\";\n\nexport const App = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/mobile\" component={MobileApp} />\n            <Route component={DesktopApp} />\n        </Switch>\n    </BrowserRouter>\n);"],"sourceRoot":""}